#!/usr/bin/env bash
#
# @license BSD-3-Clause
#
# Copyright (c) 2019 Quansight. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Print dependency information.
#
# Usage: deps_info
#

# FUNCTIONS #

# Prints usage information.
usage() {
	echo '' >&2
	echo 'Usage: deps_info' >&2
	echo '' >&2
}

# MAIN #

GIT=$(command -v git 2>/dev/null)
echo '-----'
echo 'git:' >&2
echo '' >&2
if [[ -x "${GIT}" ]]; then
	"${GIT}" --version >&2
else
	echo 'Unable to detect git.' >&2
fi
echo '' >&2

GNU_MAKE=$(command -v make 2>/dev/null)
echo '-----'
echo 'GNU make:' >&2
echo '' >&2
if [[ -x "${GNU_MAKE}" ]]; then
	"${GNU_MAKE}" --version >&2
else
	echo 'Unable to detect GNU make.' >&2
fi
echo '' >&2

NODEJS=$(command -v node 2>/dev/null)
echo '-----'
echo 'Node.js:' >&2
echo '' >&2
if [[ -x "${NODEJS}" ]]; then
	"${NODEJS}" --version >&2
else
	echo 'Unable to detect Node.js.' >&2
fi
echo '' >&2

NPM=$(command -v npm 2>/dev/null)
echo '-----'
echo 'npm:' >&2
echo '' >&2
if [[ -x "${NPM}" ]]; then
	"${NPM}" --version >&2
else
	echo 'Unable to detect npm.' >&2
fi
echo '' >&2

PIP=$(command -v pip 2>/dev/null)
echo '-----'
echo 'pip:' >&2
echo '' >&2
if [[ -x "${PIP}" ]]; then
	"${PIP}" --version >&2
else
	echo 'Unable to detect pip.' >&2
fi
echo '' >&2

PYCODESTYLE=$(command -v pycodestyle 2>/dev/null)
echo '-----'
echo 'pycodestyle:' >&2
echo '' >&2
if [[ -x "${PYCODESTYLE}" ]]; then
	"${PYCODESTYLE}" --version >&2
else
	echo 'Unable to detect pycodestyle.' >&2
fi
echo '' >&2

PYDOCSTYLE=$(command -v pydocstyle 2>/dev/null)
echo '-----'
echo 'pydocstyle:' >&2
echo '' >&2
if [[ -x "${PYDOCSTYLE}" ]]; then
	"${PYDOCSTYLE}" --version >&2
else
	echo 'Unable to detect pydocstyle.' >&2
fi
echo '' >&2

PYLINT=$(command -v pylint 2>/dev/null)
echo '-----'
echo 'Pylint:' >&2
echo '' >&2
if [[ -x "${PYLINT}" ]]; then
	"${PYLINT}" --version >&2
else
	echo 'Unable to detect Pylint.' >&2
fi
echo '' >&2

PYTHON=$(command -v python 2>/dev/null)
echo '-----'
echo 'Python:' >&2
echo '' >&2
if [[ -x "${PYTHON}" ]]; then
	"${PYTHON}" --version >&2
else
	echo 'Unable to detect Python.' >&2
fi
echo '' >&2

YARN=$(command -v yarn 2>/dev/null)
echo '-----'
echo 'yarn:' >&2
echo '' >&2
if [[ -x "${YARN}" ]]; then
	"${YARN}" --version >&2
else
	echo 'Unable to detect yarn.' >&2
fi
echo '' >&2
