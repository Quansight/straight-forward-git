#!/usr/bin/env bash
#
# @license BSD-3-Clause
#
# Copyright (c) 2019 Quansight. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Download a remote resource.
#
# Usage: download <url> [output_filepath]
#
# Arguments:
#
#   url                 Remote resource.
#   output_filepath     Output filepath.
#

# VARIABLES #

# Set the url:
url="$1"

# Find a program for downloading a resource:
CURL=$(command -v curl 2>/dev/null)
WGET=$(command -v wget 2>/dev/null)
FETCH=$(command -v fetch 2>/dev/null)

# Define a timeout (in seconds):
timeout=30

# Define command options:
curl_opts="-fkL --connect-timeout ${timeout} -y ${timeout}"
wget_opts="--no-check-certificate --tries=1 --timeout=${timeout}"
fetch_opts="-T ${timeout}"


# FUNCTIONS #

# Prints usage information.
usage() {
	echo '' >&2
	echo 'Usage: download <url> [output_filepath]' >&2
	echo '' >&2
}


# MAIN #

# Handle arguments...
if [[ "$#" -eq 0 ]]; then
	usage
	exit 0
elif [[ "$#" -eq 1 ]]; then
	curl_opts="${curl_opts} -O"
elif [[ "$#" -eq 2 ]]; then
	curl_opts="${curl_opts} -o $2"
	wget_opts="${wget_opts} -O $2"
	fetch_opts="${fetch_opts} -o $2"
else
	echo 'ERROR: unrecognized arguments. Must provide a URL and, optionally, an output filepath.' >&2
	exit 1
fi

# Determine the command for downloading a resource...
if [[ -x "${CURL}" ]] && "${CURL}" -V >/dev/null; then
	get="${CURL}"
	opts="${curl_opts}"
elif [[ -x "${WGET}" ]] && "${WGET}" -V >/dev/null; then
	get="${WGET}"
	opts="${wget_opts}"
elif [[ -x "${FETCH}" ]]; then
	get="${FETCH}"
	opts="${fetch_opts}"
else
	echo 'ERROR: missing dependency. Please download either curl, wget, or fetch. Once installed, run the command again.' >&2
	exit 1
fi

# Download the resource:
eval "${get} ${opts} ${url}"
